<?xml version="1.0" ?>
<!--
 (C) 2015 National Australia Bank [All rights reserved]. This product and
 related documentation are protected by copyright restricting its use,
 copying, distribution, and decompilation. No part of this product or related
 documentation may be reproduced in any form by any means without prior
 written authorization of National Australia Bank. Unless otherwise arranged,
 third parties may not have access to this product or related documents.
-->
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.1//EN" "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<module name="Checker" >

    <module name="SuppressionFilter">

    </module>


    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <!-- <module name="PackageHtml"/> -->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <!--  <module name="NewlineAtEndOfFile"/>  -->

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>


    <module name="TreeWalker">
        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <!--
               <module name="JavadocMethod"/>
                <module name="JavadocType"/>
                <module name="JavadocVariable"/>
                <module name="JavadocStyle"/>
        -->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="MemberName"/>
        <!-- <module name="MethodName"/> -->
        <module name="PackageName">
            <property name="format" value="^com\.example+(\.[a-z]*)*$"/>
        </module>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>


        <!-- Checks for Headers                              -->
        <!-- See http://checkstyle.sf.net/config_header.html   -->
        <!-- <module name="Header">                            -->
        <!-- The follow property value demonstrates the ability     -->
        <!-- to have access to ANT properties. In this case it uses -->
        <!-- the ${basedir} property to allow Checkstyle to be run  -->
        <!-- from any directory within a project. See property      -->
        <!-- expansion,                                             -->
        <!-- http://checkstyle.sf.net/config.html#properties        -->
        <!-- <property                                              -->
        <!--     name="headerFile"                                  -->
        <!--     value="${basedir}/java.header"/>                   -->
        <!-- </module> -->

        <!-- Following interprets the header file as regular expressions. -->
        <!--<module name="RegexpHeader"/>-->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <!--<module name="AvoidStarImport"/>-->
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>





        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <!--<module name="EmptyForIteratorPad"/>-->
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter">
            <property name="tokens" value="BNOT, DEC, DOT, INC, LNOT, UNARY_MINUS, UNARY_PLUS" />
            <property name="allowLineBreaks" value="false" />
        </module>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>

        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>

        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>



        <module name="EmptyStatement"/>

        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true" />
            <property name="ignoreSetter" value="true" />
        </module>
        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean"/>
        </module>
        <module name="InnerAssignment"/>

        <module name="MissingSwitchDefault"/>
        <!--<module name="RedundantThrows"/>-->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!--<module name="DesignForExtension"/> -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>



        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <!--       <module name="FinalParameters"/>  -->
        <!--
        <module name="GenericIllegalRegexp">
            <property name="format" value="\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module>
        -->
        <module name="TodoComment">
            <property name="format" value="TODO"/>
            <property name="severity" value="warning"/>
        </module>
        <module name="UpperEll"/>
        <!-- Miscellaneous other checks.                   -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="System\.out"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Don't use System.out"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="System\.err"/>
            <property name="message" value="Don't use System.err"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="System\.exit"/>
            <property name="message" value="Don't use System.exit"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="Logger\.getLogger"/>
            <property name="message" value="Use commons logging (LogFactory.getLog) instead of log4j"/>
        </module>





        <module name="JUnitTestCase"/>

        <module name="NestedIfDepth">
            <property name="max" value="2"/>
        </module>
        <module name="RegexpSinglelineJava">
            <property name="format" value="jdbcTemplate"/>
            <property name="ignoreCase" value="true"/>
            <property name="ignoreComments" value="true"/>
            <property name="message" value="Do not use jdbcTemplate! Use Hibernate instead!"/>
        </module>
    </module>
</module>